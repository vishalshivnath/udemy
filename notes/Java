Completed
A.Functional Programming With Java
1.Udemy course
https://fico.udemy.com/course/functional-functional-with-java/learn/lecture/16544602#overview
VERY GOOD COURSE
Need to repeat one more time

2.Github for java in 28 Mins
https://github.com/in28minutes/functional-functional-with-java
NEED TO GO THROUGH THE EXAMPLES

3.Java in 28 Mins
https://courses.in28minutes.com/courses

4.You tube
https://www.youtube.com/watch?v=W_E6iSTBqNs&list=PLBBog2r6uMCTM_CKntPT-GIMR2-4d55Un&index=2


B.Java Generics
https://fico.udemy.com/course/introduction-to-generics-in-java/learn/

Pending
B.https://fico.udemy.com/course/java-multithreading-concurrency-performance-optimization/learn/lecture/11200112#overview
https://fico.udemy.com/course/java-multithreading-concurrency-performance-optimization/learn/lecture/11200112#overview

C.https://fico.udemy.com/course/java-8-new-features-in-simple-way/learn/lecture/8686122#overview


D.Java 8 features 11 hrs
https://fico.udemy.com/course/modern-java-learn-java-8-features-by-coding-it/learn/lecture/10526960#overview

E.Java memory management 3.5 hrs
https://fico.udemy.com/course/java-memory-management/learn/lecture/6057346#overview


https://courses.in28minutes.com/p/mockito-for-beginner-in-5-steps


F.Java 8 Overview
https://winterbe.com/posts/2014/03/16/java-8-tutorial/

Java Streams
https://winterbe.com/posts/2014/07/31/java8-stream-tutorial-examples/

https://winterbe.com/posts/2014/03/16/java-8-tutorial/

https://winterbe.com/tutorials/
https://martinfowler.com/articles/collection-pipeline/#DefiningCollectionPipeline
https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#NonInterference


G.
http://tutorials.jenkov.com/java-functional-programming/streams.html

H.
https://www.baeldung.com/java-8-new-features

https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html
\\Note that a lambda expression looks a lot like a method declaration; you can consider lambda expressions as anonymous methodsâ€”methods without a name.

http://tutorials.jenkov.com/java-functional-programming/streams.html

https://www.journaldev.com/2774/java-8-stream

https://www.journaldev.com/2763/java-8-functional-interfaces


Q1. Which of the following abstract method present in Predicate interface?
A. test()
B. apply()
C. get()
D. accept()

Explanation: Predicate functional interface contains only one abstract method: test()

Which of the following is the static method present in Predicate interface?
A. test()
B. and()
C. or()
D. isEqual()
Explanation: Predicate functional interface contains only one static method: isEqual()




Q3. Which of the following default methods present in Predicate interface?
A. and()
B. or()
C. negate()
D. All the above
Answer: D

Q6. Which of the following is valid regarding Predicate functional interface?
A. Predicate Functional interface present in java.util.function package B. It is introduced in java 1.8 version
C. We can use Predicate to implement conditional checks
D. It is possible to join 2 predicates into a single predicate also.
E. All the above


Q7. Which of the following is valid Predicate to check whether the given user is admin or not?
A. Predicate<User> p=user->user.getRole().equals("Admin");
B. Predicate<Boolean> p=user->user.getRole().equals("Admin"); C. Predicate<User> p=(user,s="admin")->user.getRole().equals(s); D. None of the above
Answer: A
Q8. Consider the following Predicates
Predicate<Integer> p1=i->i%2==0; Predicate<Integer> p1=i->i>10;
Which of the following are invalid ?
A. p1.and(p2)
B. p1.or(p2)
C. p1.negate(p2) D. p1.negate()
Answer: C
Explanation: negate() method won't take any argument
